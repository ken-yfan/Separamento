{"files":[{"id":"b18b79ff-5df6-4521-ad57-72b1bde5b358","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"Asia/Shanghai\",\n  \"dependencies\": {},\n  \"webapp\": {\n    \"executeAs\": \"USER_DEPLOYING\",\n    \"access\": \"ANYONE_ANONYMOUS\"\n  },\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\"\n}"},{"id":"78e6a031-011c-484a-b7b3-935d4eba4fd9","name":"Código","type":"server_js","source":"var InUrl \u003d \u00271RjlnqnwiqkIz29yjQobgqsQtHDwr4TconatzU4kHVwA\u0027;\nvar ss \u003d SpreadsheetApp.openById(InUrl);\nvar wsRomaneio \u003d ss.getSheetByName(\"Romaneio\");\nvar separarWs \u003d ss.getSheetByName(\u0027separar\u0027);\nvar precoWs \u003d ss.getSheetByName(\"preco\");\nvar wsCliente \u003d ss.getSheetByName(\"cliente\"); // 使用\"cliente\"工作表\n\nfunction doGet(e) {   \n    var wsDados \u003d ss.getSheetByName(\"vendedor\");\n    var listVendedor \u003d wsDados.getRange(2, 1, wsDados.getRange(\"A2\").getDataRegion().getLastRow() - 1, 1).getValues();\n    var htmlListArrayVendedor \u003d listVendedor.map(function(r) { return \u0027\u003coption\u003e\u0027 + r[0] + \u0027\u003c/option\u003e\u0027 }).join(\"\");\n\n    var template \u003d HtmlService.createTemplateFromFile(\"Separar\");\n    template.listVendedor \u003d htmlListArrayVendedor;\n\n    return template.evaluate().setXFrameOptionsMode(HtmlService.XFrameOptionsMode.ALLOWALL); // 允许页面在iframe中打开\n}\n\n\nfunction include(filename) {\n    return HtmlService.createHtmlOutputFromFile(filename).getContent();\n}"},{"id":"163ce66e-c499-4cf0-8c2d-f426ea993ef6","name":"Separar","type":"html","source":"\u003c!DOCTYPE html\u003e\n\u003chtml lang\u003d\"en\"\u003e\n\u003chead\u003e\n    \u003cbase target\u003d\"_top\"\u003e\n    \u003cmeta charset\u003d\"UTF-8\"\u003e\n    \u003cmeta name\u003d\"viewport\" content\u003d\"width\u003ddevice-width, initial-scale\u003d1.0\"\u003e\n    \u003ctitle\u003eSeparamento\u003c/title\u003e\n    \n    \u003c!-- 引入 Bootstrap CSS --\u003e\n    \u003clink href\u003d\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css\" rel\u003d\"stylesheet\" crossorigin\u003d\"anonymous\"\u003e\n        \n    \u003c!-- 引入 Bootstrap JavaScript --\u003e\n    \u003cscript src\u003d\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js\" crossorigin\u003d\"anonymous\"\u003e\u003c/script\u003e\n\n    \u003c!-- QRious Library --\u003e\n    \u003cscript src\u003d\"https://cdn.jsdelivr.net/npm/qrious@latest/dist/qrious.min.js\"\u003e\u003c/script\u003e\n\n    \u003c!-- 包含自定义的 CSS --\u003e\n    \u003c?!\u003dinclude(\"Separar-css\"); ?\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    \u003c!-- 成功保存数据的模态对话框 --\u003e\n    \u003cdiv class\u003d\"modal fade\" id\u003d\"successModal\" tabindex\u003d\"-1\" aria-labelledby\u003d\"successModalLabel\" aria-hidden\u003d\"true\"\u003e\n        \u003cdiv class\u003d\"modal-dialog\"\u003e\n            \u003cdiv class\u003d\"modal-content\"\u003e\n                \u003cdiv class\u003d\"modal-header\"\u003e\n                    \u003ch5 class\u003d\"modal-title\" id\u003d\"successModalLabel\"\u003eSuccess\u003c/h5\u003e\n                    \u003cbutton type\u003d\"button\" class\u003d\"btn-close\" data-bs-dismiss\u003d\"modal\" aria-label\u003d\"Close\"\u003e\u003c/button\u003e\n                \u003c/div\u003e\n                \u003cdiv class\u003d\"modal-body\"\u003e\n                    \u003c!-- 模态对话框的消息 --\u003e\n                    \u003cdiv id\u003d\"modalMessage\"\u003eData saved successfully!\u003c/div\u003e\n                \u003c/div\u003e\n                \u003cdiv class\u003d\"modal-footer\"\u003e\n                    \u003cbutton type\u003d\"button\" class\u003d\"btn btn-secondary\" data-bs-dismiss\u003d\"modal\"\u003eClose\u003c/button\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\n    \u003cdiv class\u003d\"container\"\u003e\n        \u003c!-- 第一行: 表格和扫描区块 --\u003e\n        \u003cdiv class\u003d\"row table-row\"\u003e\n            \u003cdiv class\u003d\"col-md-7 table-container custom-form\"\u003e\n                \u003ctable class\u003d\"table table-striped\"\u003e\n                    \u003cthead\u003e\n                        \u003ctr\u003e\n                            \u003cth class\u003d\"hidden-column\"\u003eCódigo\u003c/th\u003e\n                            \u003cth\u003eArtigo\u003c/th\u003e\n                            \u003cth\u003eNo.produzer\u003c/th\u003e\n                            \u003cth\u003eCor\u003c/th\u003e\n                            \u003cth\u003eNo.r\u003c/th\u003e\n                            \u003cth\u003eMetro\u003c/th\u003e\n                            \u003cth\u003ePreço\u003c/th\u003e\n                            \u003cth\u003eValor\u003c/th\u003e\n                        \u003c/tr\u003e\n                    \u003c/thead\u003e\n                    \u003ctbody id\u003d\"display\"\u003e\u003c/tbody\u003e\n                \u003c/table\u003e\n            \u003c/div\u003e\n            \n            \u003cdiv class\u003d\"col-md-5 scanner-container custom-form\"\u003e\n              \u003cdiv class\u003d\"d-flex align-items-center mb-3\"\u003e\n                \u003ch5 class\u003d\"mb-0\"\u003eScanner + -\u003c/h5\u003e\n                \u003cdiv class\u003d\"form-check ms-3\"\u003e\n                  \u003cinput type\u003d\"checkbox\" id\u003d\"clear\" class\u003d\"form-check-input\" onclick\u003d\"clearAllInputs()\"\u003e\n                  \u003clabel for\u003d\"clear\" class\u003d\"form-check-label\"\u003eApagar\u003c/label\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n\n                \u003cdiv class\u003d\"row mb-2\"\u003e\n                    \u003cdiv class\u003d\"col-8 p-1\"\u003e\n                        \u003clabel for\u003d\"scannerPreco\"\u003ePra.pegar preco\u003c/label\u003e\n                        \u003cinput type\u003d\"text\" id\u003d\"scannerPreco\" class\u003d\"form-control\" oninput\u003d\"scanPreco()\" ondblclick\u003d\"clearScannerPreco()\"\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class\u003d\"col-4 p-1\"\u003e\n                        \u003clabel for\u003d\"Preco\"\u003ePreco\u003c/label\u003e\n                        \u003cinput type\u003d\"text\" id\u003d\"Preco\" class\u003d\"form-control\" readonly\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cdiv class\u003d\"mb-2\"\u003e\n                    \u003clabel for\u003d\"scannerInput\"\u003eSeparar + -\u003c/label\u003e\n                    \u003cinput type\u003d\"text\" id\u003d\"scannerInput\" class\u003d\"form-control\" oninput\u003d\"scanInput()\" ondblclick\u003d\"clearScannerSalvar()\" autocomplete\u003d\"off\"\u003e\n                \u003c/div\u003e\n                \u003ch5\u003eRomaneio criar\u003c/h5\u003e\n                \u003cdiv class\u003d\"row mb-2\"\u003e\n                    \u003cdiv class\u003d\"col-6 p-1\"\u003e\n                        \u003clabel for\u003d\"vendedorInput\"\u003eRe\u003c/label\u003e\n                        \u003cselect id\u003d\"vendedorInput\" class\u003d\"form-control\" required onchange\u003d\"clearInputs()\"\u003e\n                            \u003coption disabled selected value\u003d\"\"\u003eEscolhe\u003c/option\u003e\n                            \u003c?!\u003d listVendedor; ?\u003e\n                        \u003c/select\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class\u003d\"col-6 p-1\"\u003e\n                        \u003clabel for\u003d\"clienteInput\"\u003eClient\u003c/label\u003e\n                        \u003cinput id\u003d\"clienteInput\" class\u003d\"form-control\" valid required autocomplete\u003d\"off\" onfocus\u003d\"updateClientes()\"\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n                \u003cdiv class\u003d\"row mb-2\"\u003e\n                    \u003cdiv class\u003d\"col-8 p-1\"\u003e\n                        \u003clabel for\u003d\"criarRomaneio\"\u003eCr.romaneio\u003c/label\u003e\n                        \u003cinput type\u003d\"text\" id\u003d\"criarRomaneio\" class\u003d\"form-control\" readonly \u003e\n                    \u003c/div\u003e\n                    \u003cdiv class\u003d\"form-check col-4 p-1\" id\u003d\"salvaSepararContainer\" style\u003d\"display: none;\"\u003e\n                        \u003cinput type\u003d\"checkbox\" id\u003d\"salvaSeparar\" class\u003d\"form-check-input\"\u003e\n                        \u003clabel for\u003d\"salvaSeparar\" class\u003d\"form-check-label\"\u003eSalvar\u003c/label\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n                \u003ch5\u003eProcurar\u003c/h5\u003e\n                \u003cdiv class\u003d\"row mb-2\"\u003e\n                    \u003cdiv class\u003d\"col-8 p-1\"\u003e\n                        \u003clabel for\u003d\"procurarRomaneio\"\u003ePr.romaneio\u003c/label\u003e\n                        \u003cinput type\u003d\"text\" id\u003d\"procurarRomaneio\" class\u003d\"form-control\" valid required autocomplete\u003d\"off\" onfocus\u003d\"updateRomaneios()\"\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class\u003d\"form-check col-4 p-1\" id\u003d\"displaySalvarContainer\" style\u003d\"display: none;\"\u003e\n                        \u003cinput type\u003d\"checkbox\" id\u003d\"liberarPrcr\" class\u003d\"form-check-input\"\u003e\n                        \u003clabel for\u003d\"liberarPrcr\" class\u003d\"form-check-label\"\u003edisplay\u003c/label\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n\n        \u003c!-- 第二行: 文本区和输入框 --\u003e\n        \u003cdiv class\u003d\"row text-area-row\"\u003e\n            \u003cdiv class\u003d\"col-md-7 text-area-container custom-form\"\u003e\n                \u003ctextarea id\u003d\"summaryTextarea\" rows\u003d\"12\" class\u003d\"form-control\" readonly onblur\u003d\"toggleCheckboxes()\"\u003e\u003c/textarea\u003e\n            \u003c/div\u003e\n            \u003cdiv class\u003d\"col-md-5 form-container custom-form\"\u003e\n                \u003cdiv class\u003d\"row mb-2\"\u003e\n                    \u003cdiv class\u003d\"col-8 p-1\"\u003e\n                        \u003ccanvas id\u003d\"qrcode\" class\u003d\"mb-2\"\u003e\u003c/canvas\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class\u003d\"col-4 p-1\"\u003e\n                        \u003cdiv class\u003d\"form-check\" style\u003d\"display: none;\" id\u003d\"criarCodigoContainer\"\u003e\n                            \u003cinput type\u003d\"checkbox\" id\u003d\"criarCodigo\" class\u003d\"form-check-input\" onclick\u003d\"criarCodigo()\"\u003e\n                            \u003clabel for\u003d\"criarCodigo\" class\u003d\"form-check-label\"\u003eCriarCodigo\u003c/label\u003e\n                        \u003c/div\u003e\n                        \u003cdiv class\u003d\"form-check\" style\u003d\"display: none;\" id\u003d\"SalvarContainer\"\u003e\n                            \u003cinput type\u003d\"checkbox\" id\u003d\"Salvar\" class\u003d\"form-check-input\" onclick\u003d\"Salvar()\"\u003e\n                            \u003clabel for\u003d\"Salvar\" class\u003d\"form-check-label\"\u003eSalvar\u003c/label\u003e\n                        \u003c/div\u003e\n                        \u003cdiv class\u003d\"form-check\" style\u003d\"display: none;\" id\u003d\"PrinteContainer\"\u003e\n                            \u003cinput type\u003d\"checkbox\" id\u003d\"Printe\" class\u003d\"form-check-input\" onclick\u003d\"Printe()\"\u003e\n                            \u003clabel for\u003d\"Printe\" class\u003d\"form-check-label\"\u003ePrint\u003c/label\u003e\n                        \u003c/div\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\n    \u003c!-- 包含自定义的 JS --\u003e\n    \u003c?!\u003dinclude(\"Separar-js\"); ?\u003e\n\u003c/body\u003e\n\n\u003c/html\u003e\n\n"},{"id":"d4c5232e-abf8-4705-91df-fa2b70d4f8f3","name":"Separar-js","type":"html","source":"\u003cscript\u003e\ndocument.addEventListener(\u0027DOMContentLoaded\u0027, function() {\n    document.getElementById(\u0027scannerPreco\u0027).addEventListener(\u0027input\u0027, scanPreco);\n    document.getElementById(\u0027scannerInput\u0027).addEventListener(\u0027input\u0027, scanInput);\n    document.getElementById(\u0027scannerInput\u0027).addEventListener(\u0027dblclick\u0027, clearScannerSalvar);\n    document.getElementById(\u0027scannerPreco\u0027).addEventListener(\u0027dblclick\u0027, clearScannerPreco);\n    document.getElementById(\u0027summaryTextarea\u0027).addEventListener(\u0027dblclick\u0027, calculateSummary);\n    document.getElementById(\u0027salvaSeparar\u0027).addEventListener(\u0027change\u0027, submitData);\n    document.getElementById(\u0027procurarRomaneio\u0027).addEventListener(\u0027change\u0027, displayCheckbox);\n   \n    document.getElementById(\u0027liberarPrcr\u0027).addEventListener(\u0027input\u0027, fetchAndDisplayData);\n    // 事件监听：当 textarea 失去焦点时调用\n   document.getElementById(\u0027summaryTextarea\u0027).addEventListener(\u0027blur\u0027, criarCodigo);\n    \n\n});\n\n document.addEventListener(\u0027DOMContentLoaded\u0027, function() {\n            var criarRomaneioInput \u003d document.getElementById(\u0027criarRomaneio\u0027);\n            if (criarRomaneioInput) {\n                criarRomaneioInput.addEventListener(\u0027focus\u0027, fetchNewRomaneio);\n            } else {\n                console.warn(\u0027Element with ID \"criarRomaneio\" not found\u0027);\n            }\n        });\n\nfunction scanPreco() {\n    try {\n        const chavePreco \u003d document.getElementById(\u0027scannerPreco\u0027).value;\n        const parts \u003d chavePreco.split(\u0027|\u0027);\n        if (parts.length !\u003d\u003d 6) {\n        return;\n    }\n        const produto \u003d parts[0];\n        const noPrdz \u003d parts[1];\n        let chave;\n\n        if (produto.startsWith(\u0027ES\u0027)) {\n            chave \u003d `${produto}|${noPrdz}`;\n        } else {\n            chave \u003d produto;\n        }\n\n        google.script.run.withSuccessHandler(function(precoFormatado) {\n            if (precoFormatado !\u003d\u003d \u0027\u0027) {\n              document.getElementById(\u0027scannerPreco\u0027).value \u003d chave;\n              document.getElementById(\u0027Preco\u0027).value \u003d precoFormatado;\n              document.getElementById(\u0027scannerInput\u0027).focus();\n            } else {\n                document.getElementById(\u0027Preco\u0027).value \u003d \u0027sem preco\u0027;\n            }\n        }).procuraPrecoLocal(chave);\n    } catch (error) {\n        console.error(\u0027Error in scanPreco:\u0027, error);\n    }\n}\nfunction scanInput() {\n    const display \u003d document.getElementById(\u0027display\u0027);\n    const scannerInput \u003d document.getElementById(\u0027scannerInput\u0027).value.trim();   \n    const parts \u003d scannerInput.split(\u0027|\u0027);\n\n    if (parts.length !\u003d\u003d 6) {\n        return false;\n    }\n\n    // 检查是否已存在相同的codigo行\n    const existingRow \u003d Array.from(display.querySelectorAll(\u0027tr\u0027)).find(row \u003d\u003e {\n        return row.cells[0] \u0026\u0026 row.cells[0].textContent.trim() \u003d\u003d\u003d scannerInput;\n    });\n\n    if (existingRow) {\n        // 如果存在相同codigo的行，从显示列表中删除该行\n        display.removeChild(existingRow);\n        // 终止函数执行，不保存重复的行数据\n        document.getElementById(\u0027scannerInput\u0027).value \u003d \u0027\u0027;\n        return false;\n    }\n\n    const precoInput \u003d document.getElementById(\u0027scannerPreco\u0027).value.trim();\n    let newArtigo, newNoPrdz;\n\n\n    if (precoInput.includes(\u0027|\u0027)) {\n        const precoParts \u003d precoInput.split(\u0027|\u0027);\n        newArtigo \u003d precoParts[0].trim();\n        newNoPrdz \u003d precoParts[1].trim();\n    } else {\n        newArtigo \u003d precoInput.trim();\n        newNoPrdz \u003d null;\n    }\n\n    const jiage \u003d document.getElementById(\u0027Preco\u0027).value.trim();\n\n    const [artigo, noProduzer, designer, noRolo, metro] \u003d parts;\n    const precoFloat \u003d parseFloat(jiage.replace(\u0027R$\u0027, \u0027\u0027).replace(\u0027,\u0027, \u0027.\u0027)).toFixed(2);\n\n    let valor \u003d 0;\n\n    if ((newNoPrdz \u0026\u0026 artigo \u003d\u003d\u003d newArtigo \u0026\u0026 noProduzer \u003d\u003d\u003d newNoPrdz) || (!newNoPrdz \u0026\u0026 artigo \u003d\u003d\u003d newArtigo)) {\n        valor \u003d (parseFloat(metro.replace(\u0027,\u0027, \u0027.\u0027)) * precoFloat).toFixed(2);\n        \n    }\n      if(valor \u003d\u003d\u003d 0){\n      document.getElementById(\u0027scannerInput\u0027).value \u003d \u0027\u0027;\n      document.getElementById(\u0027scannerPreco\u0027).value \u003d \u0027\u0027;\n      document.getElementById(\u0027scannerPreco\u0027).focus();\n      return false;\n    }\n    const valorFormatado \u003d parseFloat(valor).toLocaleString(\u0027pt-BR\u0027, { style: \u0027currency\u0027, currency: \u0027BRL\u0027 });\n\n    const row \u003d document.createElement(\u0027tr\u0027);\n    // 创建隐藏的codigo列\n    const codigoCell \u003d document.createElement(\u0027td\u0027);\n    codigoCell.textContent \u003d scannerInput;\n    codigoCell.classList.add(\u0027hidden-column\u0027); // 添加隐藏类\n    row.appendChild(codigoCell);\n\n    const data \u003d [artigo, noProduzer, designer, noRolo, metro, precoFloat, valorFormatado];\n    data.forEach((item, index) \u003d\u003e {\n        const cell \u003d document.createElement(\u0027td\u0027);\n        cell.textContent \u003d item || \u0027\u0027;\n        if (index \u003e\u003d 5) {\n            cell.classList.add(\u0027currency\u0027);\n        }\n        row.appendChild(cell);\n    });\n\n    display.insertBefore(row, display.firstChild);\n    document.getElementById(\u0027scannerInput\u0027).value \u003d \u0027\u0027;\n\n    setTimeout(() \u003d\u003e {\n        display.scrollTop \u003d display.scrollHeight;\n    }, 0);\n}\n\nfunction clearInputs() {\n    document.getElementById(\u0027clienteInput\u0027).value \u003d \u0027\u0027;\n    document.getElementById(\u0027procurarRomaneio\u0027).value \u003d \u0027\u0027;\n    removeDatalist(\u0027clienteOptions\u0027);\n    removeDatalist(\u0027romaneioOptions\u0027);\n}\n\n\nfunction updateClientes() {\n    var vendedor \u003d document.getElementById(\u0027vendedorInput\u0027).value;\n\n    if (vendedor) {\n        google.script.run.withSuccessHandler(function(clientes) {\n            updateDatalist(\u0027clienteInput\u0027, \u0027clienteOptions\u0027, clientes);\n        }).getClientesByVendedor(vendedor);\n    }\n}\n\nfunction updateRomaneios() {\n    var vendedor \u003d document.getElementById(\u0027vendedorInput\u0027).value;\n\n    if (vendedor) {\n        google.script.run.withSuccessHandler(function(romaneios) {\n            updateDatalist(\u0027procurarRomaneio\u0027, \u0027romaneioOptions\u0027, romaneios);\n        }).getRomaneiosByVendedor(vendedor);\n    }\n}\n\nfunction updateDatalist(inputId, datalistId, options) {\n    var inputElement \u003d document.getElementById(inputId);\n    inputElement.value \u003d \u0027\u0027;\n    inputElement.setAttribute(\u0027list\u0027, datalistId);\n\n    var datalist \u003d document.getElementById(datalistId);\n    if (datalist) {\n        datalist.remove();\n    }\n\n    datalist \u003d document.createElement(\u0027datalist\u0027);\n    datalist.id \u003d datalistId;\n\n    options.forEach(function(optionValue) {\n        var option \u003d document.createElement(\u0027option\u0027);\n        option.value \u003d optionValue;\n        datalist.appendChild(option);\n    });\n\n    document.body.appendChild(datalist);\n}\n\n\nfunction clearScannerSalvar() {\n    document.getElementById(\u0027scannerInput\u0027).value \u003d \u0027\u0027;    \n}\n\nfunction clearScannerPreco(){\n    document.getElementById(\u0027scannerPreco\u0027).value \u003d \u0027\u0027;\n    document.getElementById(\u0027Preco\u0027).value \u003d \u0027\u0027;\n}\n\nfunction clearQRCode() {\n    const qrCanvas \u003d document.getElementById(\u0027qrcode\u0027);\n    const context \u003d qrCanvas.getContext(\u00272d\u0027);\n    context.clearRect(0, 0, qrCanvas.width, qrCanvas.height);\n}\n\nfunction fetchNewRomaneio() {\n            var vendedor \u003d document.getElementById(\u0027vendedorInput\u0027).value;\n\n            if (vendedor) {\n                google.script.run.withSuccessHandler(function(newRomaneio) {\n                    document.getElementById(\u0027criarRomaneio\u0027).value \u003d newRomaneio;\n                }).getNewRomaneio(vendedor);\n            } else {\n                alert(\u0027Por favor, selecione um vendedor primeiro.\u0027);\n            }\n        }\n\n  function calculateSummary() {\n            const vendedorInput \u003d document.getElementById(\u0027vendedorInput\u0027);\n            const clienteInput \u003d document.getElementById(\u0027clienteInput\u0027);\n            const criarRomaneio \u003d document.getElementById(\u0027criarRomaneio\u0027);\n            const summaryTextarea \u003d document.getElementById(\u0027summaryTextarea\u0027);\n            const salvaSepararContainer \u003d document.getElementById(\u0027salvaSepararContainer\u0027);\n\n            if (!summaryTextarea) {\n                console.error(\u0027Text area not found\u0027);\n                return;\n            }\n\n            // 提取输入框的值\n            const vendedor \u003d vendedorInput?.value || \u0027\u0027;\n            const cliente \u003d clienteInput?.value || \u0027\u0027;\n            const romaneio \u003d criarRomaneio?.value || \u0027\u0027;\n\n            // 检查输入框是否都有数据\n            if (!vendedor || !cliente || !romaneio) {\n                console.error(\u0027Missing input data\u0027);\n                salvaSepararContainer.style.display \u003d \u0027none\u0027;\n                return;\n            }\n\n            // 提取 table 的数据\n            const table \u003d document.querySelector(\u0027#display\u0027);\n            if (!table) {\n                console.error(\u0027Table not found\u0027);\n                salvaSepararContainer.style.display \u003d \u0027none\u0027;\n                return;\n            }\n\n            const rows \u003d table.querySelectorAll(\u0027tbody tr\u0027);\n            const produtoMap \u003d new Map(); // 用于按 produto 和 designer 分组\n\n            rows.forEach(row \u003d\u003e {\n                const cells \u003d row.querySelectorAll(\u0027td\u0027);\n                if (cells.length \u003e 0) {\n                    const produto \u003d cells[1]?.innerText.trim() || \u0027\u0027;\n                    const designer \u003d cells[3]?.innerText.trim() || \u0027\u0027;\n                    const rolo \u003d 1; // 每行代表一匹布\n                    const metro \u003d cells[5] ? parseFloat(cells[5].innerText.replace(\u0027,\u0027, \u0027.\u0027)) : 0;\n                    const preco \u003d cells[6] ? parseFloat(cells[6].innerText.replace(\u0027,\u0027, \u0027.\u0027)) : 0;\n\n                    // 组合 produto 和 designer 作为 key\n                    if (!produtoMap.has(produto)) {\n                        produtoMap.set(produto, new Map());\n                    }\n                    const designerMap \u003d produtoMap.get(produto);\n                    if (!designerMap.has(designer)) {\n                        designerMap.set(designer, { rolo: 0, metro: 0, preco: preco });\n                    }\n                    const item \u003d designerMap.get(designer);\n                    item.rolo +\u003d rolo;\n                    item.metro +\u003d metro;\n                }\n            });\n\n            // 生成文本内容\n            const now \u003d new Date();\n            const dia \u003d now.toLocaleDateString(\u0027pt-PT\u0027); // 格式：dd/mm/yy\n\n            let summaryText \u003d `Date: ${dia}\\n`;\n            summaryText +\u003d `Vendedor: ${vendedor}\\n`;\n            summaryText +\u003d `Cliente: ${cliente}\\n`;\n            summaryText +\u003d `Romaneio: ${romaneio}\\n\\n`;\n\n            summaryText +\u003d \u0027Summary:\\n\u0027;\n            let totalRolo \u003d 0;\n            let totalValor \u003d 0;\n\n            produtoMap.forEach((designerMap, produto) \u003d\u003e {\n                let produtoTotalRolo \u003d 0;\n                let produtoTotalMetro \u003d 0;\n                let produtoTotalValor \u003d 0;\n                designerMap.forEach((values, designer) \u003d\u003e {\n                    const valor \u003d values.metro * values.preco; // 计算 valor\n                    summaryText +\u003d `${produto.padEnd(25)} ${designer.padEnd(15)} ${values.rolo.toString().padEnd(5)} ${values.metro.toFixed(2).padEnd(15)} ${values.preco.toFixed(2).padEnd(10)} R$ ${valor.toFixed(2).replace(\u0027.\u0027, \u0027,\u0027).padStart(12)}\\n`;\n                    produtoTotalRolo +\u003d values.rolo;\n                    produtoTotalMetro +\u003d values.metro;\n                    produtoTotalValor +\u003d valor;\n                });\n\n                summaryText +\u003d `Total for ${produto}: ${produtoTotalRolo} R$ ${produtoTotalValor.toFixed(2).replace(\u0027.\u0027, \u0027,\u0027)}\\n\\n`;\n                totalRolo +\u003d produtoTotalRolo;\n                totalValor +\u003d produtoTotalValor;\n            });\n\n            summaryText +\u003d `Total Rolo: ${totalRolo}\\n`;\n            summaryText +\u003d `Total Valor: R$ ${totalValor.toFixed(2).replace(\u0027.\u0027, \u0027,\u0027)}\\n`;\n\n            summaryTextarea.value \u003d summaryText;\n            // 显示复选框容器\n            document.getElementById(\u0027salvaSepararContainer\u0027).style.display \u003d \u0027block\u0027;\n        }\n \n        function submitData() {\n            const vendedor \u003d document.getElementById(\u0027vendedorInput\u0027).value;\n            const cliente \u003d document.getElementById(\u0027clienteInput\u0027).value;\n            const romaneio \u003d document.getElementById(\u0027criarRomaneio\u0027).value;\n\n            // 获取表格数据\n            const rows \u003d [];\n            const tableRows \u003d document.querySelectorAll(\u0027#display tr\u0027);\n            tableRows.forEach(row \u003d\u003e {\n                const cells \u003d row.querySelectorAll(\u0027td\u0027);\n                const rowData \u003d [];\n                for (let i \u003d 0; i \u003c cells.length; i++) { // 跳过第一列 (codigo)\n                    rowData.push(cells[i].innerText);\n                }\n                rows.push(rowData);\n            });\n\n            const formData \u003d {\n                vendedor: vendedor,\n                cliente: cliente,\n                romaneio: romaneio,\n                data: rows\n            };\n\n            // 显示加载指示器和矩形条\n            const loadingIndicator \u003d document.getElementById(\u0027loadingIndicator\u0027);\n            if (loadingIndicator) {\n                loadingIndicator.style.display \u003d \u0027block\u0027;\n            }\n            document.getElementById(\u0027salvaSepararContainer\u0027).style.display \u003d \u0027none\u0027;\n            // 执行数据提交\n            google.script.run\n                .withSuccessHandler(function(response) {\n                    if (loadingIndicator) {\n                        loadingIndicator.style.display \u003d \u0027none\u0027;\n                    }\n\n                    // 更新模态对话框的内容并显示模态对话框\n                    const modalMessage \u003d document.getElementById(\u0027modalMessage\u0027);\n                    if (modalMessage) {\n                        modalMessage.textContent \u003d `${romaneio} saved successfully!`;\n                    }\n                    const successModal \u003d new bootstrap.Modal(document.getElementById(\u0027successModal\u0027));\n                    successModal.show();\n                    clearAllInputs();\n                })\n                .salvarSeparar(formData);\n        }\n\nfunction clearAllInputs() {\n    // 清除输入字段\n    document.getElementById(\u0027vendedorInput\u0027).value \u003d \u0027\u0027;\n    document.getElementById(\u0027clienteInput\u0027).value \u003d \u0027\u0027;\n    document.getElementById(\u0027criarRomaneio\u0027).value \u003d \u0027\u0027;\n\n    // 清除文本区域\n    document.getElementById(\u0027summaryTextarea\u0027).value \u003d \u0027\u0027;\n    // 清除表格数据\n    const tableBody \u003d document.getElementById(\u0027display\u0027);\n    if (tableBody) {\n        tableBody.innerHTML \u003d \u0027\u0027; // 清除表格行\n    }\n\n    // 清除 scannerPreco 和 precoInput 的值\n    const scannerPreco \u003d document.getElementById(\u0027scannerPreco\u0027);\n    const precoInput \u003d document.getElementById(\u0027Preco\u0027);\n\n    if (scannerPreco) {\n        scannerPreco.value \u003d \u0027\u0027;\n    }\n\n    if (precoInput) {\n        precoInput.value \u003d \u0027\u0027;\n    }\n\n    // 取消复选框的选中状态\n    document.getElementById(\u0027clear\u0027).checked \u003d false;\n    document.getElementById(\u0027salvaSeparar\u0027).checked \u003d false;\n    document.getElementById(\u0027liberarPrcr\u0027).checked \u003d false;\n    document.getElementById(\u0027displaySalvarContainer\u0027).style.display \u003d \u0027none\u0027;\n\n    // 清除 procurarRomaneio 输入框的值\n    const procurarRomaneio \u003d document.getElementById(\u0027procurarRomaneio\u0027);\n    if (procurarRomaneio) {\n        procurarRomaneio.value \u003d \u0027\u0027;\n    }\n\n    // 删除 cliente 和 romaneio 的 datalist\n    removeDatalist(\u0027clienteOptions\u0027);\n    removeDatalist(\u0027romaneioOptions\u0027);\n    clearQRCode();\n}\n\nfunction removeDatalist(datalistId) {\n    const datalist \u003d document.getElementById(datalistId);\n    if (datalist) {\n        datalist.remove();\n    }\n}\n \nfunction displayCheckbox() {\n  document.getElementById(\u0027displaySalvarContainer\u0027).style.display \u003d \u0027block\u0027;\n  document.getElementById(\u0027liberarPrcr\u0027).checked \u003d false;\n  document.getElementById(\u0027liberarPrcr\u0027).focus();\n}\n \n\nfunction fetchAndDisplayData() {\n    const procurarRomaneio \u003d document.getElementById(\u0027procurarRomaneio\u0027).value;\n    const liberarPrcrChecked \u003d document.getElementById(\u0027liberarPrcr\u0027).checked;\n\n    if (liberarPrcrChecked) {\n        // 调用 Google Apps Script 函数来获取数据\n        google.script.run.withSuccessHandler(handleFetchSuccess).fetchData(procurarRomaneio);\n    } else {\n        console.warn(\u0027Checkbox is not checked.\u0027);\n    }\n  document.getElementById(\u0027displaySalvarContainer\u0027).style.display \u003d \u0027none\u0027;\n\n}\n\nfunction handleFetchSuccess(response) {\n    const { displayContent, vendedor, cliente } \u003d response;\n\n    // 更新表格内容\n    const displayTable \u003d document.getElementById(\u0027display\u0027);\n    if (displayTable) {\n        displayTable.innerHTML \u003d displayContent; // 更新表格内容\n\n        // 确保动态内容也隐藏第一列\n        hideFirstColumn(displayTable);\n    }\n\n    // 更新 vendedor 和 cliente 输入框\n    document.getElementById(\u0027clienteInput\u0027).value \u003d cliente;\n}\n\nfunction hideFirstColumn(tableContainer) {\n    // 确保第一列在表头和表体中都被隐藏\n    const headerCells \u003d tableContainer.querySelectorAll(\u0027thead th:first-child\u0027);\n    const bodyCells \u003d tableContainer.querySelectorAll(\u0027tbody td:first-child\u0027);\n\n    headerCells.forEach(cell \u003d\u003e cell.classList.add(\u0027hidden-column\u0027));\n    bodyCells.forEach(cell \u003d\u003e cell.classList.add(\u0027hidden-column\u0027));\n}\n\n\n        // 添加事件监听器，模态对话框关闭时移除遮罩效果\n        document.getElementById(\u0027closeModalButton\u0027).addEventListener(\u0027click\u0027, function() {\n            const modalBackdrop \u003d document.querySelector(\u0027.modal-backdrop\u0027);\n            if (modalBackdrop) {\n                modalBackdrop.remove();\n            }\n        });\n\n  function toggleCheckboxes() {\n            const summaryTextarea \u003d document.getElementById(\u0027summaryTextarea\u0027);\n            const criarCodigoContainer \u003d document.getElementById(\u0027criarCodigoContainer\u0027);\n            const SalvarContainer \u003d document.getElementById(\u0027SalvarContainer\u0027);\n            const PrinteContainer \u003d document.getElementById(\u0027PrinteContainer\u0027);\n\n            if (summaryTextarea \u0026\u0026 criarCodigoContainer \u0026\u0026 SalvarContainer \u0026\u0026 PrinteContainer) {\n                if (summaryTextarea.value.trim()) {\n                    criarCodigoContainer.style.display \u003d \u0027block\u0027;\n                    SalvarContainer.style.display \u003d \u0027block\u0027;\n                    PrinteContainer.style.display \u003d \u0027block\u0027;\n                } else {\n                    criarCodigoContainer.style.display \u003d \u0027none\u0027;\n                    SalvarContainer.style.display \u003d \u0027none\u0027;\n                    PrinteContainer.style.display \u003d \u0027none\u0027;\n                }\n            } else {\n                console.error(\u0027One or more elements are missing.\u0027);\n            }\n        }\n\nfunction criarCodigo() {\n    // 获取必要的元素\n    const romaneio \u003d document.getElementById(\u0027criarRomaneio\u0027);\n    const qrCanvas \u003d document.getElementById(\u0027qrcode\u0027);\n    const qrValue \u003d romaneio.value.trim();\n\n    // 获取复选框容器\n    const criarCodigoContainer \u003d document.getElementById(\u0027criarCodigoContainer\u0027);\n    const SalvarContainer \u003d document.getElementById(\u0027SalvarContainer\u0027);\n    const PrinteContainer \u003d document.getElementById(\u0027PrinteContainer\u0027);\n\n    // 检查 QRious 库是否已加载\n    if (typeof QRious \u003d\u003d\u003d \u0027undefined\u0027) {\n        console.error(\u0027QRious library is not loaded.\u0027);\n        return;\n    }\n\n    // 根据 textarea 内容生成二维码或清除二维码\n    if (qrValue) {\n        try {\n            // 生成二维码\n            const qr \u003d new QRious({\n                element: qrCanvas,\n                value: qrValue,\n                size: 200\n            });\n\n            // 显示复选框\n            criarCodigoContainer.style.display \u003d \u0027block\u0027;\n            SalvarContainer.style.display \u003d \u0027block\u0027;\n            PrinteContainer.style.display \u003d \u0027block\u0027;\n        } catch (error) {\n            console.error(\u0027Error generating QR code:\u0027, error);\n        }\n    } else {\n        // 清空二维码\n        const context \u003d qrCanvas.getContext(\u00272d\u0027);\n        context.clearRect(0, 0, qrCanvas.width, qrCanvas.height);\n\n        // 隐藏复选框\n        criarCodigoContainer.style.display \u003d \u0027none\u0027;\n        SalvarContainer.style.display \u003d \u0027none\u0027;\n        PrinteContainer.style.display \u003d \u0027none\u0027;\n    }\n}\n\n\n\n\u003c/script\u003e"},{"id":"4ad82da5-960e-4209-81d4-d1ce63b60ded","name":"Separar-css","type":"html","source":"\u003cstyle\u003e\n html, body {\n            margin: 0;\n            padding: 0;\n            width: 100%;\n            height: 100%;\n            font-family: Arial, sans-serif;\n        }\n\n        iframe {\n            width: 100%;\n            height: 100%;\n            border: none;\n        }\n\n        .iframe-container {\n            width: 100%;\n            height: 100%;\n        }\n.container {\n    margin-top: 20px;\n    display: flex;\n    flex-direction: column;\n    height: calc(100vh - 40px); /* 减去上方和下方的 margin */\n}\n\n.row {\n    display: flex;\n    width: 100%;\n}\n\n.table-row {\n    height: 70%; /* 占 container 高度的 65% */\n}\n\n.text-area-row {\n    height: 30%; /* 占 container 高度的 35% */\n}\n\n.table-container {\n    width: 65%; /* 占行宽的 65% */\n    height: 100%; /* 让容器高度填满其父元素 */\n    overflow-y: auto; /* 添加垂直滚动条 */\n}\n\n.scanner-container {\n    width: 35%; /* 占行宽的 35% */\n    height: 100%; /* 让容器高度填满其父元素 */\n    overflow-y: auto; /* 添加垂直滚动条 */\n}\n\n.text-area-container {\n    width: 65%; /* 占行宽的 65% */\n    height: 100%; /* 让容器高度填满其父元素 */\n    overflow-y: auto; /* 添加垂直滚动条 */\n}\n\n.form-container {\n    width: 35%; /* 占行宽的 35% */\n    height: 100%; /* 让容器高度填满其父元素 */\n    overflow-y: auto; /* 添加垂直滚动条 */\n}\n\n.clear {\n    clear: both;\n}\n\n.table-container .table {\n    width: 100%;\n    margin-bottom: 20px;\n}\n.hidden-column {\n    display: none; /* 隐藏列 */\n}\n\n/* 可选：调整其他列宽度，以适应隐藏列 */\n.table th, .table td {\n    text-align: left;\n    padding: 8px;\n}\n.custom-form {\n    border: 1px solid #ccc;\n    border-radius: 10px;\n    padding: 15px;\n    margin-bottom: 20px;\n    overflow: auto; /* 添加滚动条 */\n    max-height: 100%; /* 确保最大高度 */\n}\n\n.button-container {\n    text-align: right;\n    margin-top: 20px;\n}\n\n.button-container button {\n    margin-left: 10px;\n}\n\nh3, h5 {\n    margin-bottom: 20px;\n}\n\ntextarea {\n    width: 100%;\n    height: calc(100% - 20px); /* 减去 padding */\n    overflow: auto; /* 添加滚动条 */\n    margin-bottom: 20px;\n}\n\ninput[type\u003d\"text\"], select {\n    margin-bottom: 10px;\n}\n\n.row .col-12, .row .col-6, .row .col-9, .row .col-3, .row .col-8, .row .col-4 {\n    padding-left: 5px;\n    padding-right: 5px;\n}\n\n/* 添加的优化部分 */\nh5 {\n    border-bottom: 1px solid #ccc;\n    padding-bottom: 5px;\n}\n\n.scanner-container h5 {\n    margin-top: 0;\n}\n\n/* 新增的标签和边框样式 */\n.custom-form h5 {\n    border-bottom: 1px solid #ccc;\n    padding-bottom: 5px;\n    margin-bottom: 10px;\n    font-weight: bold;\n    color: #333;\n}\n\n.custom-form {\n    border-radius: 8px;\n    padding: 15px;\n    margin-bottom: 15px;\n}\n\n/* 对第一行和第二行添加边框和标签 */\n.custom-form:nth-of-type(1) {\n    border: 1px solid #000;\n    padding: 10px;\n}\n\n.custom-form:nth-of-type(2) {\n    border: 1px solid #000;\n    padding: 10px;\n}\n\n/* 对第三行添加边框和标签 */\n.custom-form:nth-of-type(3) {\n    border: 1px solid #000;\n    padding: 10px;\n}\n#qrcode {\n    border: 2px solid #000; /* 黑色边框 */\n    padding: 10px; /* 内边距 */\n    border-radius: 5px; /* 圆角边框 */\n    width: 250px; /* 设置宽度为150px */\n    height: 200px; /* 设置高度为150px */\n}\n.custom-form .form-check {\n   margin-bottom: 0.5rem;\n}\n\u003c/style\u003e"},{"id":"d9b4ad3b-3de2-475c-b66e-a19b725c9b2e","name":"funcs","type":"server_js","source":"function procuraPrecoLocal(chave) {\n    try {\n        var r \u003d precoWs.getLastRow();\n        var precoData \u003d precoWs.getRange(1, 1, r, 2).getValues();\n\n        for (var i \u003d 0; i \u003c precoData.length; i++) {\n            var chaveWS \u003d precoData[i][0];\n            var vale \u003d precoData[i][1];\n\n            if (chaveWS \u003d\u003d\u003d chave) {\n                var newPreco \u003d vale;\n                var precoFormatado \u003d new Intl.NumberFormat(\u0027pt-BR\u0027, { style: \u0027currency\u0027, currency: \u0027BRL\u0027 }).format(parseFloat(newPreco));\n                Logger.log(precoFormatado);\n                return precoFormatado;\n            }\n        }\n\n        console.error(\u0027未找到匹配的数据行\u0027);\n        return \u0027\u0027;\n    } catch (e) {\n        console.error(\u0027处理价格时出现异常:\u0027, e.message);\n        return \u0027\u0027;\n    }\n}\n\nfunction getClientesByVendedor(vendedor) {\n    var data \u003d wsCliente.getDataRange().getValues();\n    var clientes \u003d [];\n\n    for (var i \u003d 0; i \u003c data.length; i++) {\n        if (data[i][0] \u003d\u003d vendedor) {\n            clientes.push(data[i][1]);\n        }\n    }\n\n    return clientes;\n}\n\n\nfunction getNewRomaneio(vendedor) {\n    var lastRow \u003d wsRomaneio.getLastRow();\n    Logger.log(lastRow);\n    // 如果表格为空，返回初始值\n    if (lastRow \u003d\u003d\u003d 1) {\n        return \u0027S.OR.\u0027 + vendedor + \u0027-250001\u0027;\n    }\n    \n    // 从表格中读取所有数据\n    var data \u003d wsRomaneio.getDataRange().getValues(); \n    var lastRomaneio;\n    \n    // 从最后一行向上读取数据，直到找到匹配的 vendedor\n    for (var i \u003d lastRow - 1; i \u003e\u003d 0; i--) { // 索引从 0 开始\n        if (data[i][0] \u003d\u003d\u003d vendedor) {\n            lastRomaneio \u003d data[i][1];\n            break;\n        }\n    }\n\n    Logger.log(lastRomaneio);\n    if (lastRomaneio) {\n        // 从 romaneio 字符串中提取最后的数字部分\n        var numPart \u003d parseInt(lastRomaneio.match(/(\\d+)$/)[0]);\n        // 生成新的 romaneio\n        var newNumPart \u003d numPart + 1;\n        var newRomaneio \u003d lastRomaneio.replace(/\\d+$/, newNumPart);\n        return newRomaneio;\n    } else {\n        // 如果没有找到匹配项，返回一个初始值\n        return \u0027S.OR.\u0027 + vendedor + \u0027-250001\u0027;\n    }\n}\n\n\n\nfunction getRomaneiosByVendedor(vendedor) {\n    var data \u003d wsRomaneio.getDataRange().getValues(); // 读取 A 和 B 列的数据\n    var romaneios \u003d [];\n\n    // 查找所有与 vendedor 匹配的 romaneios\n    data.forEach(function(row) {\n        if (row[0] \u003d\u003d\u003d vendedor) {\n            romaneios.push(row[1]);\n        }\n    });\n\n    return romaneios;\n}\n\nfunction salvarSeparar(formData) {\n  // 获取当前日期\n  var today \u003d new Date();\n  var dia \u003d Utilities.formatDate(today, Session.getScriptTimeZone(), \u0027dd/MM/yy\u0027);\n\n  // 将数据写入电子表格\n  formData.data.forEach(function(row) {\n    var rowData \u003d [dia, formData.vendedor, formData.cliente, formData.romaneio].concat(row);\n    separarWs.appendRow(rowData);\n  });\n  let lastRow \u003d separarWs.getLastRow();\n  var romaneioDataRow \u003d [formData.vendedor,formData.romaneio,lastRow]\n  wsRomaneio.appendRow(romaneioDataRow);\n}\n\n\n\nfunction fetchData(procurarRomaneio) {\n    var dataRomaneio \u003d wsRomaneio.getDataRange().getValues();\n    let lastRowDataGrupo;\n    let firstRowDataGrupo;\n    var r; // 定义变量 r\n\n    // 查找 Romaneio 表格中匹配 procurarRomaneio 的 C 列数据，作为 startRow\n    for (var j \u003d dataRomaneio.length - 1; j \u003e 0; j--) { // 改为 j \u003e 0\n        if (dataRomaneio[j][1] \u003d\u003d\u003d procurarRomaneio) { // B 列 (索引为 1)\n            lastRowDataGrupo \u003d dataRomaneio[j][2];\n            firstRowDataGrupo \u003d dataRomaneio[j - 1][2] + 1;\n            wsRomaneio.deleteRow(j + 1);\n            r \u003d j + 1;\n            break;\n        }\n    }\n\n    var dataRange \u003d separarWs.getRange(firstRowDataGrupo, 1, lastRowDataGrupo - firstRowDataGrupo + 1, 12).getValues(); // 修正 getRange 参数\n    var displayContent \u003d \u0027\u0027;\n    var vendedor \u003d \u0027\u0027;\n    var cliente \u003d \u0027\u0027;\n    var rowsToDelete \u003d []; // 用于存储要删除的行索引\n    var numberDelete \u003d 0; // 定义一个变量来计算push的数据个数\n\n    // 遍历数据行，生成表格内容并标记要删除的行\n    for (var i \u003d dataRange.length - 1; i \u003e\u003d 0; i--) {\n        if (dataRange[i][3] \u003d\u003d\u003d procurarRomaneio) {\n            if (!cliente) {\n                cliente \u003d dataRange[i][2]; // 假设 cliente 在第 3 列\n            }\n            // 将 valor 格式化为雷亚尔货币格式\n            var valor \u003d parseFloat(dataRange[i][11]).toLocaleString(\u0027pt-BR\u0027, { style: \u0027currency\u0027, currency: \u0027BRL\u0027 });\n            // 生成表格内容\n            displayContent +\u003d \u0027\u003ctr\u003e\u003ctd\u003e\u0027 + dataRange[i][4] + \u0027\u003c/td\u003e\u003ctd\u003e\u0027 + dataRange[i][5] + \u0027\u003c/td\u003e\u003ctd\u003e\u0027 + dataRange[i][6] + \u0027\u003c/td\u003e\u003ctd\u003e\u0027 + dataRange[i][7] + \u0027\u003c/td\u003e\u003ctd\u003e\u0027 + dataRange[i][8] + \u0027\u003c/td\u003e\u003ctd\u003e\u0027 + dataRange[i][9] + \u0027\u003c/td\u003e\u003ctd\u003e\u0027 + dataRange[i][10] + \u0027\u003c/td\u003e\u003ctd\u003e\u0027 + valor + \u0027\u003c/td\u003e\u003c/tr\u003e\u0027;\n\n            // 标记要删除的行\n            rowsToDelete.push(firstRowDataGrupo + i); // 存储实际行索引\n            numberDelete++;\n        }\n    }\n    Logger.log(rowsToDelete);\n\n    // 逆序删除匹配的行\n    rowsToDelete.sort(function(a, b) { return b - a; }).forEach(function(rowIndex) {\n        separarWs.deleteRow(rowIndex);\n    });\n\n    // 从 r 行开始到最后一行的第三列数值都减去 numberDelete++\n    for (var k \u003d r; k \u003c\u003d wsRomaneio.getLastRow(); k++) {\n        var currentValue \u003d wsRomaneio.getRange(k, 3).getValue();\n        wsRomaneio.getRange(k, 3).setValue(currentValue - numberDelete);\n    }\n\n    return {\n        displayContent: displayContent,\n        vendedor: vendedor,\n        cliente: cliente\n    };\n}\n"}]}